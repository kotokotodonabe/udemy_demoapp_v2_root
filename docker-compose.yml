# composeファイルのバージョン指定
version: "3.8"

services:
  # サービス = コンテナ
  db:
    # ベースイメージを定義
    image: postgres:15.4-alpine
    # 環境変数
    environment:
      # OSのタイムゾーン
      # UTC ... 世界標準時間
      TZ: UTC
      # postgresのタイムゾーン
      PGTZ: UTC
      # dbのパスワード
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      # ホスト側のディレクトリをコンテナで使用する
      # volumes ... ホストパス(絶対パス or 相対パス):コンテナ上のパス(絶対パス)
      # volumesを使えばホスト側の変更がリアルタイムで反映される
    volumes:
      - "./api/tmp/db:/var/lib/postgresql/data"

  api:
    # ベースイメージとなるDockerfileを指定
    build:
      # argsキーを使用したいためcontextを噛ませている
      context: ./api
      # Dockerfileに変数を渡す
      args:
        WORKDIR: $WORKDIR
    environment:
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      API_DOMAIN: "localhost:$FRONT_PORT"
    volumes:
      - "./api:/$WORKDIR"
    # サービスの依存関係を定義(起動の順番)
    depends_on:
      - db
    # 公開用ポートを指定
    # 公開したいポート番号：コンテナポート
    ports:
      - "$API_PORT:3000"

  front:
    build:
      context: ./front
      args:
        WORKDIR: $WORKDIR
        API_URL: "http://localhost:$API_PORT"
    # command ... コンテナで実行したいコマンドを定義
    # 開発環境用で実行するために指定
    command: yarn run dev
    volumes:
      - "./front:/$WORKDIR"
    ports:
      - "$FRONT_PORT:3000"
    depends_on:
      - api
